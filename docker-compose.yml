# Chromezy Frontend - Docker Compose Configuration
# Optimized for development with hot reload, debugging, and testing

version: '3.8'

services:
    # Main development service
    app:
        build:
            context: .
            dockerfile: Dockerfile
            target: development
        container_name: chromezy-frontend-dev
        ports:
            - '3000:3000' # Next.js development server
            - '9229:9229' # Node.js debugger port
        volumes:
            # Bind mount source code for hot reload
            - .:/app
            - /app/node_modules # Anonymous volume for node_modules
            - /app/.next # Anonymous volume for .next cache
        environment:
            - NODE_ENV=development
            - NEXT_TELEMETRY_DISABLED=1
            - WATCHPACK_POLLING=true # Enable polling for file changes (useful for some systems)
            - FAST_REFRESH=true
        env_file:
            - .env.local
            - .env.development.local
        networks:
            - chromezy-network
        restart: unless-stopped
        healthcheck:
            test: ['CMD-SHELL', 'curl -f http://localhost:3000 || exit 1']
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

    # Storybook service for component development
    storybook:
        build:
            context: .
            dockerfile: Dockerfile
            target: development
        container_name: chromezy-storybook
        ports:
            - '6006:6006'
        volumes:
            - .:/app
            - /app/node_modules
        environment:
            - NODE_ENV=development
        command: yarn storybook
        networks:
            - chromezy-network
        depends_on:
            - app
        restart: unless-stopped
        profiles:
            - storybook

    # Testing service
    test:
        build:
            context: .
            dockerfile: Dockerfile
            target: testing
        container_name: chromezy-test
        volumes:
            - .:/app
            - /app/node_modules
            - /app/coverage # Anonymous volume for test coverage
        environment:
            - NODE_ENV=test
            - CI=true
        networks:
            - chromezy-network
        profiles:
            - testing

    # Vitest UI service for interactive testing
    test-ui:
        build:
            context: .
            dockerfile: Dockerfile
            target: development
        container_name: chromezy-test-ui
        ports:
            - '51204:51204' # Vitest UI port
        volumes:
            - .:/app
            - /app/node_modules
            - /app/coverage
        environment:
            - NODE_ENV=test
        command: yarn test:ui
        networks:
            - chromezy-network
        profiles:
            - testing

    # Playwright E2E testing service
    e2e:
        build:
            context: .
            dockerfile: Dockerfile.e2e
        container_name: chromezy-e2e
        volumes:
            - .:/app
            - /app/node_modules
            - /app/test-results
            - /app/playwright-report
        environment:
            - NODE_ENV=test
            - CI=true
        networks:
            - chromezy-network
        depends_on:
            - app
        profiles:
            - e2e

    # Production build testing
    prod:
        build:
            context: .
            dockerfile: Dockerfile
            target: production
        container_name: chromezy-prod
        ports:
            - '3001:3000'
        environment:
            - NODE_ENV=production
            - NEXT_TELEMETRY_DISABLED=1
        networks:
            - chromezy-network
        profiles:
            - production

    # Nginx reverse proxy (optional for production-like testing)
    nginx:
        image: nginx:alpine
        container_name: chromezy-nginx
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
            - ./ssl:/etc/nginx/ssl:ro
        depends_on:
            - app
        networks:
            - chromezy-network
        profiles:
            - nginx

    # Redis for caching (optional)
    redis:
        image: redis:7-alpine
        container_name: chromezy-redis
        ports:
            - '6379:6379'
        volumes:
            - redis_data:/data
        command: redis-server --appendonly yes
        networks:
            - chromezy-network
        profiles:
            - cache

networks:
    chromezy-network:
        driver: bridge
        name: chromezy-network

volumes:
    redis_data:
        driver: local
